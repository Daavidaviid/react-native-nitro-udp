///
/// NitroUdp-Swift-Cxx-Bridge.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#include "NitroUdp-Swift-Cxx-Bridge.hpp"

// Include C++ implementation defined types
#include "HybridUdpSpecSwift.hpp"
#include "NitroUdp-Swift-Cxx-Umbrella.hpp"

namespace margelo::nitro::udp::bridge::swift {

  // pragma MARK: std::function<void(const std::shared_ptr<ArrayBuffer>& /* data */)>
  Func_void_std__shared_ptr_ArrayBuffer_ create_Func_void_std__shared_ptr_ArrayBuffer_(void* _Nonnull swiftClosureWrapper) {
    auto swiftClosure = NitroUdp::Func_void_std__shared_ptr_ArrayBuffer_::fromUnsafe(swiftClosureWrapper);
    return [swiftClosure = std::move(swiftClosure)](const std::shared_ptr<ArrayBuffer>& data) mutable -> void {
      swiftClosure.call(ArrayBufferHolder(data));
    };
  }
  
  // pragma MARK: std::shared_ptr<margelo::nitro::udp::HybridUdpSpec>
  std::shared_ptr<margelo::nitro::udp::HybridUdpSpec> create_std__shared_ptr_margelo__nitro__udp__HybridUdpSpec_(void* _Nonnull swiftUnsafePointer) {
    NitroUdp::HybridUdpSpec_cxx swiftPart = NitroUdp::HybridUdpSpec_cxx::fromUnsafe(swiftUnsafePointer);
    return std::make_shared<margelo::nitro::udp::HybridUdpSpecSwift>(swiftPart);
  }
  void* _Nonnull get_std__shared_ptr_margelo__nitro__udp__HybridUdpSpec_(std__shared_ptr_margelo__nitro__udp__HybridUdpSpec_ cppType) {
    std::shared_ptr<margelo::nitro::udp::HybridUdpSpecSwift> swiftWrapper = std::dynamic_pointer_cast<margelo::nitro::udp::HybridUdpSpecSwift>(cppType);
    #ifdef NITRO_DEBUG
    if (swiftWrapper == nullptr) [[unlikely]] {
      throw std::runtime_error("Class \"HybridUdpSpec\" is not implemented in Swift!");
    }
    #endif
    NitroUdp::HybridUdpSpec_cxx& swiftPart = swiftWrapper->getSwiftPart();
    return swiftPart.toUnsafe();
  }

} // namespace margelo::nitro::udp::bridge::swift
